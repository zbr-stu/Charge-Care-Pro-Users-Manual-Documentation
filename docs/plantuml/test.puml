@startuml
|400 客服代表|
start
:接听电话，发起工单;

|客户服务支持|
label 0
label 1
label 2
label PROCESS_TICKET
:签收工单;
if(是否需要转派？)then(继续转派)

    goto PROCESS_TICKET

else(直接处理)
endif
'repeat
'    repeat
'        if(是否申请延期)then(延期)
'        |400 客服代表|
'        :签收延期申请，返回判断结果;
'        endif
'        |客户服务支持|
'        :处理工单;
'        :回复客户;
'        :提交审核申请;
'        |400 客服代表|
'    repeat while(审核是否通过？)
'    :回访客户;
'repeat while(是否需要再次派单？)
':确认结单
'流程结束;
'end
@enduml

@startuml
header Minimum Reproducible Example
title "Can't put test query text in condition diamond"

!$shared = "SHARED"
!$nonShared = "NON-SHARED"

(*) -down-> "Minimum Reproducible Example:"
if "TEST QUESTION" then
-DOWN-> [yes] $shared
else
-RIGHT-> [no] if "SECOND TEST QUESTION" then
-DOWN-> [yes] $shared
else
-RIGHT-> [no] if "THIRD TEST QUERY" then
-DOWN-> [yes] $nonShared
-> (*)
@enduml

@startuml
(*) --> "check input"
If "input is verbose" then
--> [Yes] "turn on verbosity"
--> "run command"
else
--> "run command"
Endif
-->(*)
@enduml



@startuml
title ExampleClient 通过 Feign 调用 /examples 的交互（含网关与分页/异常分支）

actor "调用方代码\n(Your Service)" as Caller
participant "ExampleClient\n(Feign 接口代理)" as Client
participant "Feign/HTTP\n(编码请求)" as Feign
participant "stem-gateway\n(API 网关)" as Gateway
participant "business-service\n(示例业务服务)" as Biz

== 调用准备 ==
Caller -> Client: search(parameters: Map)\n(size, current, sorts, name, description)
note right of Client
  @FeignClient(name=BUSINESS_SERVICE_NAME,
  path=BUSINESS_SERVICE_PATH)
  - Swagger/Knife4j 注解仅用于文档
  - 运行时不参与调用链
end note

Client -> Feign: 组装HTTP GET /{BUSINESS_SERVICE_PATH}/examples\n?size=10&current=1&...
Feign -> Gateway: GET /{BUSINESS_SERVICE_PATH}/examples?...  (HTTP)
note over Gateway
  - 认证/鉴权、限流、路由
  - 根据服务发现(Nacos/Eureka)转发到 business-service 实例
end note
Gateway -> Biz: 转发 GET /examples?... (HTTP)

== 业务处理 ==
Biz -> Biz: 参数解析与校验\n分页/排序/模糊查询
Biz --> Gateway: 200 OK\nResult<Map<String,Object>>\n{ data: { records: [...], total, size, current } }
Gateway --> Feign: 200 OK (透传)
Feign --> Client: 反序列化为 Result<Map<String,Object>>
Client --> Caller: 返回统一结果

== 分页语义 ==
note over Caller, Biz
  - size: 每页大小 (long)\n  - current: 当前页码 (long)\n  - sorts: 形如 "+f1,-f2"\n  - 模糊：name / description
end note

== 异常分支 ==
alt 4xx 参数错误/未认证
  Biz --> Gateway: 400/401/403 + Result{code,msg}
  Gateway --> Feign: 同上
  Feign --> Client: 抛出 FeignException 或映射错误
  Client --> Caller: 由上层统一异常处理转换响应
else 下游超时/熔断
  Feign -> Feign: 超时/断路器触发（如 Resilience4j/Sentinel）
  Feign --> Client: 抛出异常/降级结果（若配置了 fallback）
  Client --> Caller: 返回降级/错误信息
end

== 性能 & 可观测性 ==
note over Feign, Biz
  - 日志：请求/响应摘要（脱敏）\n  - Trace：TraceId/SpanId 贯穿\n  - 指标：请求耗时、QPS、错误率
end note
@enduml
