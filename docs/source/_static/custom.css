/* —— 全局暗色模式背景 —— */
body[data-theme="dark"] {
  background-color: #1f2937 !important;   /* 深灰背景 */
  color: var(--soft-ink);                 /* 保持文字用浅灰 */
}

/* 如果内容区和侧边栏有独立背景，也覆盖成同样的深灰 */
body[data-theme="dark"] .content,
body[data-theme="dark"] .sidebar,
body[data-theme="dark"] .sidebar-drawer,
body[data-theme="dark"] .toc-drawer {
  background-color: #1f2937 !important;
}




/* —— 可调参数 —— */
:root {
  /* 柔和黑（浅色模式） */
  --soft-ink: #333333;

  /* 链接相关：默认/已访问用柔和黑，悬停仍是蓝色 */
  --link-normal: var(--soft-ink);    /* 普通/已访问：柔和黑 */
  --link-hover:  #2563eb;            /* 悬停：蓝 */
  --link-uline-h: 2px;               /* 下划线粗细 */
  --link-uline-gap: 0.1em;           /* 文字底部与线的间距 */
  --link-speed: 0.25s;               /* 动画时长 */
}

/* —— 暗色模式下提升对比度 —— */
body[data-theme="dark"] {
  --soft-ink: #e5e7eb;               /* 浅灰（接近 Tailwind gray-200） */
  --link-normal: var(--soft-ink);    /* 链接在暗色下也用浅灰 */
  /* --link-hover 仍用蓝色，便于状态区分；如需更柔和可换 #8ab4f8 */
}

/* —— 全局文字颜色：正文与侧边栏 —— */
.content,
.sidebar,
.sidebar-tree,
.toc-tree,
.toc-drawer {
  color: var(--soft-ink) !important;
}

/* —— 统一选择正文与侧边栏（Furo 常见容器）—— */
.content a[href],
.sidebar a[href],
.sidebar-tree a[href],
.toc-tree a[href],
.sidebar-drawer a[href],
.toc-drawer a[href],
/* Furo 对 .reference/.external 会有专门着色，这里顺手覆盖 */
.content a.reference,
.sidebar a.reference,
.sidebar-tree a.reference,
.toc-tree a.reference,
.toc-drawer a.reference,
.content a.external,
.sidebar a.external,
.sidebar-tree a.external,
.toc-tree a.external,
.toc-drawer a.external {
  color: var(--link-normal) !important;
  text-decoration: none;
  position: relative;
  display: inline-block; /* 侧边栏是块状导航时也能正常画下划线 */
}

/* 已访问仍为“柔和黑” */
.content a[href]:visited,
.sidebar a[href]:visited,
.sidebar-tree a[href]:visited,
.toc-tree a[href]:visited,
.sidebar-drawer a[href]:visited,
.toc-drawer a[href]:visited,
.content a.reference:visited,
.sidebar a.reference:visited,
.sidebar-tree a.reference:visited,
.toc-tree a.reference:visited,
.toc-drawer a.reference:visited,
.content a.external:visited,
.sidebar a.external:visited,
.sidebar-tree a.external:visited,
.toc-tree a.external:visited,
.toc-drawer a.external:visited {
  color: var(--link-normal) !important;
}

/* 悬停与键盘聚焦：文字变蓝（保持你的交互语言） */
.content a[href]:hover,
.sidebar a[href]:hover,
.sidebar-tree a[href]:hover,
.toc-tree a[href]:hover,
.sidebar-drawer a[href]:hover,
.toc-drawer a[href]:hover,
.content a[href]:focus-visible,
.sidebar a[href]:focus-visible,
.sidebar-tree a[href]:focus-visible,
.toc-tree a[href]:focus-visible,
.sidebar-drawer a[href]:focus-visible,
.toc-drawer a[href]:focus-visible {
  color: var(--link-hover) !important;
}

/* 动态下划线（默认 0 宽度） */
.content a[href]::after,
.sidebar a[href]::after,
.sidebar-tree a[href]::after,
.toc-tree a[href]::after,
.sidebar-drawer a[href]::after,
.toc-drawer a[href]::after {
  content: "";
  position: absolute;
  left: 0;
  bottom: 0;
  width: 0;
  height: var(--link-uline-h);
  background: var(--link-hover);
  transition: width var(--link-speed) ease;
}

a::after {
  content: "";
  position: absolute;
  left: 0;
  bottom: 0;
  width: 100%;
  height: 2px;
  background: var(--link-hover);
  transform: scaleX(0);
  transform-origin: left;
  transition: transform var(--link-speed) ease;
}

a:hover::after {
  transform: scaleX(1);
}


/* 悬停/聚焦时从左到右展开 */
.content a[href]:hover::after,
.sidebar a[href]:hover::after,
.sidebar-tree a[href]:hover::after,
.toc-tree a[href]:hover::after,
.sidebar-drawer a[href]:hover::after,
.toc-drawer a[href]:hover::after,
.content a[href]:focus-visible::after,
.sidebar a[href]:focus-visible::after,
.sidebar-tree a[href]:focus-visible::after,
.toc-tree a[href]:focus-visible::after,
.sidebar-drawer a[href]:focus-visible::after,
.toc-drawer a[href]:focus-visible::after {
  width: 100%;
}

/* 当前激活目录项也保持“柔和黑”（避免主题高亮把颜色改回去） */
.sidebar-tree .current > a,
.toc-tree .current > a {
  color: var(--link-normal) !important;
}


/* —— 一级/二级目录的小箭头：统一为柔和黑（亮色下 #333，暗色下 #e5e7eb）—— */
/* 一级 */
.sidebar-tree .toctree-l1 > label > i.icon > svg,
.sidebar-tree .toctree-l1 > label:hover > i.icon > svg,
.sidebar-tree .toctree-l1 input.toctree-checkbox:checked + label > i.icon > svg,
.toc-tree .toctree-l1 > label > i.icon > svg,
.toc-tree .toctree-l1 > label:hover > i.icon > svg,
.toc-tree .toctree-l1 input.toctree-checkbox:checked + label > i.icon > svg,
.toc-drawer .toctree-l1 > label > i.icon > svg,
.toc-drawer .toctree-l1 > label:hover > i.icon > svg,
.toc-drawer .toctree-l1 input.toctree-checkbox:checked + label > i.icon > svg,
/* 二级 */
.sidebar-tree .toctree-l2 > label > i.icon > svg,
.sidebar-tree .toctree-l2 > label:hover > i.icon > svg,
.sidebar-tree .toctree-l2 input.toctree-checkbox:checked + label > i.icon > svg,
.toc-tree .toctree-l2 > label > i.icon > svg,
.toc-tree .toctree-l2 > label:hover > i.icon > svg,
.toc-tree .toctree-l2 input.toctree-checkbox:checked + label > i.icon > svg,
.toc-drawer .toctree-l2 > label > i.icon > svg,
.toc-drawer .toctree-l2 > label:hover > i.icon > svg,
.toc-drawer .toctree-l2 input.toctree-checkbox:checked + label > i.icon > svg {
  color: var(--soft-ink) !important;   /* 关键：symbol 常用 stroke="currentColor" */
  stroke: var(--soft-ink) !important;  /* 兜底给线框 SVG */
  fill: var(--soft-ink) !important;    /* 兜底给实心 SVG */
}

/* 当前项也强制柔和黑（防状态样式回染） */
.sidebar-tree .toctree-l1.current > label > i.icon > svg,
.toc-tree .toctree-l1.current > label > i.icon > svg,
.toc-drawer .toctree-l1.current > label > i.icon > svg,
.sidebar-tree .toctree-l2.current > label > i.icon > svg,
.toc-tree .toctree-l2.current > label > i.icon > svg,
.toc-drawer .toctree-l2.current > label > i.icon > svg {
  color: var(--soft-ink) !important;
  stroke: var(--soft-ink) !important;
  fill: var(--soft-ink) !important;
}



